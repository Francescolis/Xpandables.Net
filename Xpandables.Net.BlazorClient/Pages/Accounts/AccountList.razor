@page "/accounts"
@using Xpandables.Net.BlazorClient.Services
@inject IBankAccountClient BankClient
@inject NavigationManager Navigation

<PageTitle>My Bank Accounts</PageTitle>

<div class="container mt-4">
    <div class="row mb-3">
        <div class="col">
            <h1>My Bank Accounts</h1>
        </div>
        <div class="col-auto">
            <button class="btn btn-primary" @onclick="NavigateToCreate">
                <i class="bi bi-plus-circle"></i> Create New Account
            </button>
        </div>
    </div>

    @if (accounts.Count == 0)
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle"></i>
            No accounts found. Create your first bank account to get started!
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var account in accounts)
            {
                <div class="col-md-6 col-lg-4 mb-3">
                    <div class="card @(account.IsClosed ? "border-danger" : "")">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0">@account.AccountNumber</h5>
                        </div>
                        <div class="card-body">
                            <h6 class="card-subtitle mb-2 text-muted">@account.Owner</h6>
                            <p class="card-text">
                                <strong>Balance:</strong> 
                                <span class="@(account.Balance >= 0 ? "text-success" : "text-danger")">
                                    @account.Balance.ToString("C")
                                </span>
                            </p>
                            <p class="card-text">
                                <small class="text-muted">@account.Email</small>
                            </p>
                            @if (account.IsClosed)
                            {
                                <span class="badge bg-danger">Closed</span>
                            }
                        </div>
                        <div class="card-footer">
                            <button class="btn btn-sm btn-outline-primary" 
                                    @onclick="() => NavigateToAccount(account.AccountId)">
                                View Details
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<BankAccountResponse> accounts = new();

    protected override async Task OnInitializedAsync()
    {
        // In a real app, you'd have a way to list all accounts
        // For this demo, accounts would be stored in local storage or similar
        await LoadAccountsFromLocalStorage();
    }

    private async Task LoadAccountsFromLocalStorage()
    {
        // This is a placeholder - implement actual storage mechanism
        // For demo purposes, we'll keep accounts in memory
        await Task.CompletedTask;
    }

    private void NavigateToCreate()
    {
        Navigation.NavigateTo("/accounts/create");
    }

    private void NavigateToAccount(Guid accountId)
    {
        Navigation.NavigateTo($"/accounts/{accountId}");
    }
}
